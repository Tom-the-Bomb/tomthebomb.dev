---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import Icon from "../../components/Icon.astro";
import HoverSlide from "../../components/HoverSlide.astro";
import { getAlbumImages } from "../../utils";
import { albums } from "../photography.astro";

export async function getStaticPaths() {
    return Object.values(albums).map((album) => (
        {
            params: {
                id: album.id,
            },
            props: {
                album,
            },
        }
    ));
}

const { album } = Astro.props;
const images = await getAlbumImages(album.id);

const title = album.data.title;
const alt = `An image from the album: [${title}]`;
---
<BaseLayout>
    <div class="flex flex-col flex-wrap gap-3 text-center mt-0 lg:mt-20">
        <h1 class="text-4xl font-extrabold drop-shadow-lg">
            {title}
        </h1>
        <p class="px-6 lg:px-8 text-md opacity-75 font-sans">
            {album.data.description}
        </p>
        <div class="px-2 sm:px-0 mx-auto container my-8 sm:columns-2 md:columns-3 lg:columns-4 xl:columns-4">
            {
                images.map((image) => (
                    <Image
                        src={image}
                        alt={alt}
                        class={
                            `rounded-md mb-4 shadow-xl hover:scale-[102%] opacity-90
                            border border-transparent hover:border-slate-100
                            transition-all duration-300 ease-in-out`
                        }
                        format="jpg"
                        quality="max"
                        loading="lazy"
                        decoding="async"
                        data-album-image
                    />
                ))
            }
        </div>
        <div class="text-slate-200 drop-shadow-md font-semibold mt-0 lg:mt-10">
            <HoverSlide text="View More Albums â†’" href="."/>
        </div>
    </div>
    <div
        id="modal"
        class="hidden fixed z-50 left-0 top-0 w-dvw h-dvh
        bg-black bg-opacity-75 backdrop-blur-md"
    >
        <Icon
            img="close"
            target="_self"
            size="4em"
            styles="close-btn absolute z-50 top-4 right-4 text-slate-100"
        />
        <div class="swiper-body w-full h-full overflow-x-hidden">
            <div class="swiper w-full h-full">
                <div id="swiper-container" class="swiper-wrapper">
                    {
                        images.map((slide) => (
                            <div class="swiper-slide">
                                <div class="w-full h-full p-5 flex flex-col gap-3 justify-center items-center">
                                    <div class="flex justify-center items-center grow min-h-0">
                                        <Image
                                            src={slide}
                                            alt={alt}
                                            class="block max-h-full w-auto"
                                            format="jpg"
                                            loading="lazy"
                                            decoding="async"
                                            quality="max"
                                            data-swiper-slide={slide.src}
                                        />
                                    </div>
                                    <p class="caption text-center font-sm font-sans text-rose-200 text-wrap"></p>
                                </div>
                            </div>
                        ))
                    }
                </div>
            </div>
        </div>
    </div>
</BaseLayout>

<script>
    import Swiper from 'swiper';
    import { Keyboard, EffectCoverflow } from 'swiper/modules';

    import 'swiper/css';

    import { formatImageEXIF } from "../../utils";

    document.addEventListener('astro:page-load', () => {
        const swiper = new Swiper('.swiper', {
            modules: [Keyboard, EffectCoverflow],
            effect: 'coverflow',
            loop: true,
            grabCursor: true,
            centeredSlides: true,
            keyboard: true,
            slidesPerView: 1,
            spaceBetween: 75,
            direction: 'vertical',
            breakpoints: {
                768: {
                    direction: 'horizontal',
                },
            },
        });

        const modal = document.getElementById('modal')!;

        modal.querySelectorAll('div.swiper-slide')
            ?.forEach(async (slide) => {
                const img = slide.querySelector<HTMLImageElement>('[data-swiper-slide]')!;

                slide.querySelector('p.caption')!.innerHTML = await formatImageEXIF(
                    img,
                    img.getAttribute('data-swiper-slide')!,
                );
            });

        modal.querySelector('.close-btn')
            ?.addEventListener('click', (event) => {
                modal.style.display = 'none';
                event.stopPropagation();
            });

        document.querySelectorAll('[data-album-image]')
            ?.forEach((image, idx) => {
                image.addEventListener('click', () => {
                    swiper.slideToLoop(idx, 0);
                    modal.style.display = 'block';
                });
            });
    });
</script>